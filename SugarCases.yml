--- &id001 !ruby/object:Source 
attributes: 
  name: SugarCases
  refreshtime: 
  prolog: |
    u = @source.login
    p = Digest::MD5.hexdigest(@source.password)
    ua = {'user_name' => u,'password' => p}
    ss = client.login(ua,nil)
    if ss.error.number.to_i != 0
      p 'failed to login - #{ss.error.description}'
      return
    else
      session_id = ss['id']
      uid = client.get_user_id(session_id)
    end

  updated_at: 2008-12-05 21:50:23.373165 Z
  deletecall: "name_value_list.push({'name'=>'deleted','value'=>'1'}); result=client.set_entry(session_id,'Cases',name_value_list); "
  createcall: "result=client.set_entry(session_id,'Cases',name_value_list); "
  type: 
  url: http://rhomobile.com/sugar/soap.php?wsdl
  sync: |
    result.entry_list.each do |x|
      x.name_value_list.each do |y|
        o=ObjectValue.new
        o.source_id=@source.id
        o.object=x['id']
        o.attrib=y.name
        o.value=y.value
        o.update_type='query'
        o.save
      end
    
      # add fields that didn't come back originally!: the assigned_to and account_id
      entry_result=client.get_entry(session_id,'Cases',x['id'],['assigned_user_id','account_id'])
      entry_result.entry_list[0].name_value_list.each do |y|
        o=ObjectValue.new
        o.source_id=@source.id
        o.object=x['id']
        o.attrib=y.name
        o.value=y.value
        o.update_type='query'
        o.save
      end
    end

  method: 
  id: "2"
  updatecall: "result=client.set_entry(session_id,'Cases',name_value_list); "
  call: |
    select_fields = ['name','case_number','priority','status','type','description','resolution'] 
    result = client.get_entry_list(session_id,'Cases','','case_number',0,select_fields,'10000',0);

  password: password
  login: adam
  epilog: client.logout(session_id)
  created_at: 2008-11-20 23:04:24
attributes_cache: {}

changed_attributes: {}

errors: !ruby/object:ActiveRecord::Errors 
  base: *id001
  errors: {}

new_record_before_save: 
