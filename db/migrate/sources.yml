SugarAccounts:
  id: 1
  name: SugarAccounts
  url: http://rhomobile.com/sugar/soap.php?wsdl
  login: testuser
  password: testuser
  adapter: SugarAccounts
  app_id: 1

SugarCases:
  id: 2
  name: SugarCases
  url: http://rhomobile.com/sugar/soap.php?wsdl
  login: testuser
  password: testuser
  app_id: 1
  prolog: |
    u = login
    p = Digest::MD5.hexdigest(password)
    ua = {'user_name' => u,'password' => p}
    ss = @client.login(ua,nil)
    if ss.error.number.to_i != 0
      p 'failed to login - #{ss.error.description}'
      return
    else
      @session_id = ss['id']
      uid = @client.get_user_id(@session_id)
    end

  call: |
    select_fields = ['name','case_number','priority','status','type','description','resolution']
    result = @client.get_entry_list(@session_id,'Cases','','case_number',0,select_fields,'10000',0);


  sync: |
    result.entry_list.each do |x|
      x.name_value_list.each do |y|
        o=ObjectValue.new
        o.source_id=.id
        o.object=x['id']
        o.attrib=y.name
        o.value=y.value
        o.save
      end
      # add fields that didn't come back originally!: the assigned_to and account_id
      entry_result=@client.get_entry(@session_id,'Cases',x['id'],['assigned_user_id','account_id'])
      entry_result.entry_list[0].name_value_list.each do |y|
        o=ObjectValue.new
        o.source_id=.id
        o.object=x['id']
        o.attrib=y.name
        o.value=y.value
        o.save
      end
    end

  createcall:
    # name_value_list is passed in and can be used in the code below
    # for creates we just assume that the primary keys (if fields) are left out
    result=@client.set_entry(@session_id,'Cases',name_value_list);

  updatecall:
    # name_value_list is passed in and can be used in the code below
    result=@client.set_entry(@session_id,'Cases',name_value_list);

  deletecall:
    name_value_list.push({'name'=>'deleted','value'=>'1'});
    result=@client.set_entry(@session_id,'Cases',name_value_list);

  epilog:
    @client.logout(@session_id)

SugarEmployees:
  id: 3
  name: SugarEmployees
  url: http://rhomobile.com/sugar/soap.php?wsdl
  login: testuser
  password: testuser
  app_id: 1
  prolog: |
    u = login
    p = Digest::MD5.hexdigest(password)
    ua = {'user_name' => u,'password' => p}
    ss = @client.login(ua,nil)
    if ss.error.number.to_i != 0
      p 'failed to login - #{ss.error.description}'
      return
    else
      @session_id = ss['id']
      uid = @client.get_user_id(@session_id)
    end

  call: |
    select_fields = ['first_name','last_name','status','title','phone_mobile','user_name']
    result = @client.get_entry_list(@session_id,'Employees',"(users.status='Active')",'last_name',0,select_fields,'10000',0);


  sync: |
    result.entry_list.each do |x|
      x.name_value_list.each do |y|
        o=ObjectValue.new
        o.source_id=id
        o.object=x['id']
        o.attrib=y.name
        o.value=y.value
        o.save
      end
    end

  createcall: |
    # name_value_list is passed in and can be used in the code below
    # for creates we just assume that the primary keys (if fields) are left out
    result=@client.set_entry(@session_id,'Employees',name_value_list);

  updatecall: |
    # name_value_list is passed in and can be used in the code below
    result=@client.set_entry(@session_id,'Employees',name_value_list);

  deletecall:
    name_value_list.push({'name'=>'deleted','value'=>'1'});
    result=@client.set_entry(@session_id,'Employees',name_value_list);

  epilog:
    @client.logout(@session_id)

SiebelServiceRequests:
  id: 4
  name: SiebelServiceRequests
  url: secure-ausomxbha.crmondemand.com
  login: RHOMOBILE/ADAM@RHOMOBILE.COM
  password: password1
  app_id: 2

  prolog: |
    https = Net::HTTP.new(url,"443")
    https.use_ssl = true
    https.verify_mode = OpenSSL::SSL::VERIFY_NONE
    headers={"UserName"=>login,"Password"=>password}
    @session_id=nil
    https.start do |https|
        req = Net::HTTP::Get.new("/Services/Integration?command=login", headers)
        response = https.request(req)
        resp = response.body
        p "Response " + resp
        @session_id=response['Set-Cookie']
    end
    session=@session_id.to_s
    start=session.index('=')
    finish=session.index(';')
    session=session[start+1...finish] if start and finish
    endpoint_url ='https://secure-ausomxbha.crmondemand.com/Services/Integration/ServiceRequest;jsessionid='+session
    obj = Default_Binding_ServiceRequest.new(endpoint_url)
    obj.wiredump_dev = STDERR
    http=nil

  call: |
    input=ServiceRequestWS_ServiceRequestQueryPage_Input.new
    input.startRowNum=0
    s=ServiceRequest.new
    s.serviceRequestId=""
    s.subject=""
    s.createdDate=""
    s.accountName=""
    s.description=""
    s.priority=""
    input.listOfServiceRequest=[s]
    output=obj.serviceRequestQueryPage(input)

  sync: |
    output.listOfServiceRequest.each do |x|
        # subject
        o=ObjectValue.new
        o.source_id=id
        o.object=x.serviceRequestId
        o.attrib="subject"
        o.value=x.subject
        o.save
        #accountName
        o=ObjectValue.new
        o.source_id=id
        o.object=x.serviceRequestId
        o.attrib="accountName"
        o.value=x.accountName
        o.save
        #description
        o=ObjectValue.new
        o.source_id=id
        o.object=x.serviceRequestId
        o.attrib="description"
        o.value=x.description
        o.update_type="pending"
        o.save
        #priority
        o=ObjectValue.new
        o.source_id=id
        o.object=x.serviceRequestId
        o.attrib="priority"
        o.value=x.priority
        o.save
        #createdDate attribute
        o=ObjectValue.new
        o.source_id=id
        o.object=x.serviceRequestId
        o.attrib="createdDate"
        o.value=x.createdDate
        o.save
    end

  createcall: |
      ServiceRequestWS_ServiceRequestInsert_Input.new
      s=ServiceRequest.new
      s.serviceRequestId=""
      s.accountName=name_value_list[0]["value"] # account name
      s.description=name_value_list[1]["value"] # description
      s.priority=name_value_list[2]["value"] # priority
      s.subject=name_value_list[3]["value"] # subject
      input.listOfServiceRequest=[s]
      output=obj.serviceRequestInsert(input)

  deletecall: |
    input=ServiceRequestWS_ServiceRequestDelete_Input.new
    s=ServiceRequest.new
    s.serviceRequestId=name_value_list[0]["value"] # ID
    input.listOfServiceRequest=[s]
    output=obj.serviceRequestDelete(input)

  updatecall: |
    input=ServiceRequestWS_ServiceRequestUpdate_Input.new
    s=ServiceRequest.new
    s.accountName=name_value_list[0]["value"] # account name
    s.description=name_value_list[1]["value"] # description
    s.priority=name_value_list[2]["value"] # priority
    s.serviceRequestId=name_value_list[3]["value"] # subject
    input.listOfServiceRequest=[s]
    output=obj.serviceRequestUpdate(input)

  epilog:

LighthouseProjects:
  id: 5
  app_id: 4
  adapter: "LighthouseProjects"
  name: "LighthouseProjects"
  url: "http://rhomobile.lighthouseapp.com"
  login: 
  password: 
  prolog: ""
  deletecall: ""
  sync: ""
  updatecall: ""
  call: ""
  
LighthouseMilestones:
  id: 6
  app_id: 4
  adapter: "LighthouseMilestones"
  name: "LighthouseMilestones"
  url: "http://rhomobile.lighthouseapp.com"
  login: 
  password: 
  prolog: ""
  deletecall: ""
  sync: ""
  updatecall: ""
  call: ""
  
LighthouseTickets:
  id: 7
  app_id: 4
  adapter: "LighthouseTickets"
  name: "LighthouseTickets"
  url: "http://rhomobile.lighthouseapp.com"
  login: 
  password: 
  prolog: ""
  deletecall: ""
  sync: ""
  updatecall: ""
  call: ""

LighthouseUsers:
  id: 8
  app_id: 4
  adapter: "LighthouseUsers"
  name: "LighthouseUsers"
  url: "http://rhomobile.lighthouseapp.com"
  login: 
  password: 
  prolog: ""
  deletecall: ""
  sync: ""
  updatecall: ""
  call: ""
  
LighthouseTicketVersions:
  id: 9
  app_id: 4
  adapter: "LighthouseTicketVersions"
  name: "LighthouseTicketVersions"
  url: "http://rhomobile.lighthouseapp.com"
  login: 
  password: 
  prolog: ""
  deletecall: ""
  sync: ""
  updatecall: ""
  call: ""
  
LighthouseSettings:
  id: 10
  app_id: 4
  adapter: "LighthouseSettings"
  name: "LighthouseSettings"
  url: "http://rhomobile.lighthouseapp.com"
  login: 
  password: 
  prolog: ""
  deletecall: ""
  sync: ""
  updatecall: ""
  call: ""
      
